!!!
%html{lang: "en-GB"}
  %head
    %meta{charset: "UTF-8"}/
    %meta{content: "width=device-width, initial-scale=1.0, user-scalable=no", name: "viewport"}/
    %title jQuery Credit Card Validator — Pawel Decowski
    %link{href: "http://jquerycreditcardvalidator.com/", rel: "canonical"}/
    = stylesheet_link_tag    'demo.css','application', media: 'all', 'data-turbolinks-track' => true
    = javascript_include_tag '"https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"', 'demo.js', 'jquery.creditCardValidator.js', 'data-turbolinks-track' => true
    = csrf_meta_tags
    :javascript
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-12777986-11']);
      _gaq.push(['_trackPageview']);

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
  %body
    #container
      %h1 jQuery Credit Card Validator
      %h2
        by
        %a{href: "http://twitter.com/PawelDecowski"} @PawelDecowski
      %p
        jQuery Credit Card Validator
        %em detects and validates
        credit card numbers. It’ll
        tell you the detected
        %a{href: "#supported_card_types"} credit card type
        and whether the number
        length and
        %a{href: "http://en.wikipedia.org/wiki/Luhn_algorithm"} Luhn checksum
        are valid for the type of card.
      .demo
        %h3 Demo
        .numbers
          %p Try some of these numbers:
          %ul.list
            %li 4000000000000002
            %li 4026000000000002
            %li 501800000009
            %li 5100000000000008
            %li 6011000000000004
        %form
          %h2 Payment details
          %ul
            %li
              %ul.cards
                %li.visa Visa
                %li.visa_electron Visa Electron
                %li.mastercard MasterCard
                %li.maestro Maestro
                %li.discover Discover
            %li
              %label{for: "card_number"} Card number
              %input#card_number{name: "card_number", type: "text"}/
            %li.vertical
              %ul
                %li
                  %label{for: "expiry_date"}
                    Expiry date
                    %small mm/yy
                  %input#expiry_date{maxlength: "5", name: "expiry_date", type: "text"}/
                %li
                  %label{for: "cvv"} CVV
                  %input#cvv{maxlength: "3", name: "cvv", type: "text"}/
            %li.vertical.maestro
              %ul
                %li
                  %label{for: "issue_date"}
                    Issue date
                    %small mm/yy
                  %input#issue_date{maxlength: "5", name: "issue_date", type: "text"}/
                %li
                  %span.or or
                  %label{for: "issue_number"} Issue number
                  %input#issue_number{maxlength: "2", name: "issue_number", type: "text"}/
            %li
              %label{for: "name_on_card"} Name on card
              %input#name_on_card{name: "name_on_card", type: "text"}/
      .example
        %h3 How to use it
        %p The function’s signature is:
        %pre
          %code .validateCreditCard( callback(result) [, options] )
        %p So the basic usage looks like this:
        %pre
          %code
            :preserve
              $('#cc_number').validateCreditCard(function(result)
              {
                  alert('CC type: ' + result.card_type.name
                    + '\nLength validation: ' + result.length_valid
                    + '\nLuhn validation: + result.luhn_valid');
              });        %p
          Or with
          %code options
          specified:
        %pre
          %code $('#cc_number').validateCreditCard(function(result) { ... }, { accept: ['visa', 'mastercard'] })
      %h3 How it works
      %p
        jQuery Credit Card Validator is written in
        %a{href: "http://www.coffeescript.org/"} CoffeeScript
        and (surprise, surprise!) is a
        %a{href: "http://jquery.com/"} jQuery
        plugin. It attaches to the
        %a{href: "https://developer.mozilla.org/en/DOM/DOM_event_reference/input"} input event
        (with a fallback
        to the
        = succeed ")" do
          %a{href: "https://developer.mozilla.org/en/DOM/DOM_event_reference"} keyup event
        %code input
        field changes, it calls a function defined by you. It passes a single
        parameter to the function — an object with 3 properties:
      %ul.list
        %li
          %code card_type
          — an object with the below properties, or
          %code null
          if card type unknown
          %ul.list
            %li
              %code name
              — one of the
              = succeed "," do
                %a{href: "#supported_card_types"} strings describing the card type
              %code visa
            %li
              %code pattern
              — regular expression used to match the card type, eg
              %code /^4/
            %li
              %code length
              — an array of valid lengths for the card type, eg
              %code [13, 16]
        %li
          %code length_valid
          —
          %code true
          if the number length is valid,
          %code false
          otherwise
        %li
          %code luhn_valid
          —
          %code true
          if the Luhn checksum is correct,
          %code false
          otherwise
      %p The second parameter currently supports one option:
      %ul.list
        %li
          %code accept
          (optional) — list of accepted credit cards, eg
          = succeed ";" do
            %code ['visa', 'amex']
      %h3#supported_card_types Supported card types and corresponding string descriptors
      %ul.list
        %li
          American Express —
          %code amex
        %li
          Diners Club Carte Blanche —
          %code diners_club_carte_blanche
        %li
          Diners Club International —
          %code diners_club_international
        %li
          Diners Club United States & Canada —
          %code mastercard
          (it is actually a MasterCard)
        %li
          Discover Card —
          %code discover
        %li
          JCB —
          %code jcb
        %li
          Laser —
          %code laser
        %li
          Maestro —
          %code maestro
        %li
          MasterCard —
          %code mastercard
        %li
          Visa —
          %code visa
        %li
          Visa Electron —
          %code visa_electron
      .download
        %h3 Like what you see?
        %p
          %a.button{href: "https://github.com/PawelDecowski/jQuery-CreditCardValidator/zipball/master"} Download now
      .footer
        %script{async: "", src: "http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"}
        %ins.adsbygoogle{"data-ad-client" => "ca-pub-8628069815995906", "data-ad-slot" => "9259785664", style: "display:inline-block;width:728px;height:90px"}
        :javascript
          (adsbygoogle = window.adsbygoogle || []).push({});
        %p
          ©2012–2013
          %a{href: "http://twitter.com/PawelDecowski"} Pawel Decowski
        %p.fork_me
          %a{href: "http://github.com/PawelDecowski/jQuery-CreditCardValidator/"}
            %img{alt: "Fork me on GitHub", src: "https://a248.e.akamai.net/assets.github.com/img/e6bef7a091f5f3138b8cd40bc3e114258dd68ddf/687474703a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f7265645f6161303030302e706e67"}/